name: Build OpenWrt Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm_cortex-a7
          - arm_cortex-a9
          - aarch64_generic
        include:
          - arch: x86_64
            target: x86/64
            sdk_url: https://downloads.openwrt.org/releases/22.03.5/targets/x86/64/openwrt-sdk-22.03.5-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
          - arch: arm_cortex-a7
            target: sunxi/cortexa7
            sdk_url: https://downloads.openwrt.org/releases/22.03.5/targets/sunxi/cortexa7/openwrt-sdk-22.03.5-sunxi-cortexa7_gcc-11.2.0_musl_eabi.Linux-x86_64.tar.xz
          - arch: arm_cortex-a9
            target: mvebu/cortexa9
            sdk_url: https://downloads.openwrt.org/releases/22.03.5/targets/mvebu/cortexa9/openwrt-sdk-22.03.5-mvebu-cortexa9_gcc-11.2.0_musl_eabi.Linux-x86_64.tar.xz
          - arch: aarch64_generic
            target: armvirt/64
            sdk_url: https://downloads.openwrt.org/releases/22.03.5/targets/armvirt/64/openwrt-sdk-22.03.5-armvirt-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            ecj \
            fastjar \
            file \
            g++ \
            gawk \
            gettext \
            git \
            java-propose-classpath \
            libelf-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libssl-dev \
            python3 \
            python3-dev \
            python3-setuptools \
            rsync \
            subversion \
            swig \
            time \
            unzip \
            wget \
            xsltproc \
            zlib1g-dev

      - name: Setup OpenWrt SDK
        run: |
          wget "${{ matrix.sdk_url }}"
          SDK_NAME=$(basename "${{ matrix.sdk_url }}" .tar.xz)
          tar xf "${SDK_NAME}.tar.xz"
          mv "${SDK_NAME}" sdk

      - name: Update feeds
        run: |
          cd sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Setup package
        run: |
          cd sdk
          mkdir -p package/writefreely
          cp -r ../Makefile package/writefreely/

      - name: Build package
        run: |
          cd sdk
          make defconfig
          make package/writefreely/compile V=s

      - name: Organize artifacts
        if: success()
        run: |
          mkdir -p ./artifacts
          find sdk/bin/packages -name "writefreely_*.ipk" -exec cp {} ./artifacts/ \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: writefreely-${{ matrix.arch }}
          path: artifacts/*.ipk
          retention-days: 7

      - name: Generate release notes
        if: success()
        run: |
          echo "### WriteFreely for OpenWrt (${{ matrix.arch }})" > release_notes.md
          echo "Built from commits:" >> release_notes.md
          echo "\`${{ github.sha }}\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "Built on: $(date)" >> release_notes.md

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.ipk
          name: Release ${{ github.sha }}
          tag_name: release-${{ github.sha }}
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
