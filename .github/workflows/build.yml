name: Build OpenWrt Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64_generic
            target: armsr/armv8
            sdk_url: https://downloads.openwrt.org/releases/23.05.5/targets/armsr/armv8/openwrt-sdk-23.05.5-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            ecj \
            fastjar \
            file \
            g++ \
            gawk \
            gettext \
            git \
            java-propose-classpath \
            libelf-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libssl-dev \
            python3 \
            python3-dev \
            python3-setuptools \
            rsync \
            subversion \
            swig \
            time \
            unzip \
            wget \
            xsltproc \
            zlib1g-dev

      - name: Setup OpenWrt SDK
        run: |
          SDK_FILE="openwrt-sdk-23.05.5-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          wget ${{ matrix.sdk_url }}
          echo "Current directory contents:"
          ls -la
          echo "Extracting SDK..."
          tar xf "$SDK_FILE"
          echo "After extraction, directory contents:"
          ls -la
          SDK_DIR="openwrt-sdk-23.05.5-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64"
          if [ ! -d "$SDK_DIR" ]; then
            echo "ERROR: SDK directory '$SDK_DIR' not found!"
            exit 1
          fi
          echo "Found SDK directory: $SDK_DIR"
          mv "$SDK_DIR" sdk

      - name: Setup package
        run: |
          cd sdk
          # 添加 Go 语言支持
          echo "src-git packages https://git.openwrt.org/feed/packages.git^0da9f824ea74e48f360d1258f2649ea6a1a05ef2" > feeds.conf
          ./scripts/feeds update packages
          ./scripts/feeds install golang
          # 设置我们的包
          mkdir -p package/writefreely
          cp -r ../writefreely/* package/writefreely/

      - name: Build package
        run: |
          cd sdk
          make defconfig
          make package/writefreely/compile V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: writefreely-ipk
          path: sdk/bin/packages/*/base/writefreely_*.ipk
